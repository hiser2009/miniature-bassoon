name: Meraki Deployment Pipeline

on:
  push:
    branches:
      - main
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          pip install requests
          pip install meraki

      - name: Show Networks
        env:
          MERAKI_API_KEY: ${{ secrets.MERAKI_API_KEY }}
          ORG_ID: ${{ secrets.ORG_ID }}
        run: |
          printenv | grep MERAKI_API_KEY
          printenv | grep ORG_ID
          python show/show_networks.py
          python -c "print('~' * 40)"

  deploy_dev_staging:
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          pip install requests
          pip install meraki
          sudo apt-get update -y
          sudo apt-get install tree -y

      - name: Print Vars
        run: |
          printenv

      - name: Show Networks
        run: |
          python show/show_networks.py
          python -c "print('~' * 40)"

      - name: Create Networks
        run: |
          python create_staging_network/pomona_staging_network/pomona_network.py
          python -c "print('~' * 40)"

      - name: Show Networks
        run: |
          python show/show_networks.py
          python -c "print('~' * 40)"

      - name: Create VLANS & DHCP
        run: |
          python create_staging_vlans_dhcp/pomona_staging_vlans_dhcp/pomona_staging_vlans_dhcp.py
          python -c "print('~' * 40)"
            
      - name: Show VLANS & DHCP
        run: |
          python show/show_vlans_dhcp.py
          python -c "print('~' * 40)"

      - name: Persist created_network_id.txt
        uses: actions/upload-artifact@v2
        with:
          name: created_network_id
          path: created_network_id.txt

  delete_staging_env:
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          pip install requests
          pip install meraki
          sudo apt-get update -y
          sudo apt-get install tree -y

      - name: Restore created_network_id.txt
        uses: actions/download-artifact@v2
        with:
          name: created_network_id
          path: .

      - name: Show Networks
        run: |
          python show/show_networks.py
          python -c "print('~' * 40)"
            
      - name: Show VLANS & DHCP
        run: |
          python show/show_vlans_dhcp.py
          python -c "print('~' * 40)"

      - name: Delete VLANS & DHCP
        run: |
          python delete_staging_vlans_dhcp/delete_vlans_dhcp.py
          python -c "print('~' * 40)"

      - name: Show VLANS & DHCP
        run: |
          python show/show_vlans_dhcp.py
          python -c "print('~' * 40)"

      - name: Delete Networks
        run: |
          python delete_staging_network/delete_network.py
          python -c "print('~' * 40)"

      - name: Show Networks
        run: |
          python show/show_networks.py
          python -c "print('~' * 40)"

  deploy_prod:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          pip install requests
          pip install meraki
          pip install --upgrade meraki
          sudo apt-get update -y
          sudo apt-get install tree -y

      - name: Show Networks
        run: |
          python show/show_networks.py
          python -c "print('~' * 40)"
      
      - name: Create VLANS & DHCP
        run: |
          python create_production_vlans_dhcp/pomona_prod_vlans_dhcp/pomona_prod_vlans_dhcp.py
          python -c "print('~' * 40)"

      - name: Show VLANS & DHCP
        run: |
          python show/show_vlans_dhcp.py
          python -c "print('~' * 40)"
